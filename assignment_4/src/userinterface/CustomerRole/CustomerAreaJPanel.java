/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Restaurant.Order;
import Business.Restaurant.Restaurant;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;

    private UserAccount userAccount;
    private EcoSystem ecosystem;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAccount = account;
        //valueLabel.setText(enterprise.getName());
        populateRequestTable();
        populatePreviousTable();
        ecosystem.getRestaurantDirectory().deleteRestaurant("a");
        ecosystem.getRestaurantDirectory().deleteRestaurant("a");
        ecosystem.getRestaurantDirectory().deleteRestaurant("a");
        lblCustomerName.setText(account.getName());
    }

    public void populateRequestTable() {
        DefaultTableModel table = (DefaultTableModel) tblRestInfo.getModel();

        table.setRowCount(0);

        Object[] row = new Object[3];
        //System.out.println();
        for (Restaurant restaurant : ecosystem.getRestaurantDirectory().getRestaurantDirectory()) {
            row[0] = restaurant.getRestaurantName();
            //System.out.println(restro.getAdminUName());
            row[1] = restaurant.getRestaurantAddress();
            row[2] = restaurant.getRestaurantNumber();
            table.addRow(row);
        }
    }

    public void populatePreviousTable() {
        DefaultTableModel table = (DefaultTableModel) tblPrevious.getModel();
        table.setRowCount(0);

        for (Customer customer : ecosystem.getCustomerDirectory().getCustomerDirectory()) {
            if (customer.getUserName().equals(userAccount.getUsername())) {
                // System.out.println(restro.getOrderList());
                for (Order dish : customer.getOrderList()) {
                    Object[] row = new Object[4];
                    row[0] = dish;
                    row[1] = dish.getRestaurantName();
                    row[2] = dish.getPrice();
                    row[3] = dish.getStatus();
                    table.addRow(row);
                }

            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestInfo = new javax.swing.JTable();
        btnPlaceOrder = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        lblCustomerName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPrevious = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setBackground(new java.awt.Color(214, 208, 200));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblRestInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Restaurant Name", "Restaurant Location", "Restaurant Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRestInfo);
        if (tblRestInfo.getColumnModel().getColumnCount() > 0) {
            tblRestInfo.getColumnModel().getColumn(0).setResizable(false);
            tblRestInfo.getColumnModel().getColumn(1).setResizable(false);
            tblRestInfo.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 75, 650, 110));

        btnPlaceOrder.setBackground(new java.awt.Color(214, 50, 48));
        btnPlaceOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnPlaceOrder.setText("Order");
        btnPlaceOrder.setBorder(null);
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });
        add(btnPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 120, 40));

        refreshTestJButton.setBackground(new java.awt.Color(214, 50, 48));
        refreshTestJButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.setBorder(null);
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 130, 40));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Welcome ");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 27, 100, 30));

        lblCustomerName.setText("<value>");
        add(lblCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 158, 26));

        tblPrevious.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Restaurant Name", "Price", "Status"
            }
        ));
        jScrollPane3.setViewportView(tblPrevious);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 650, 110));
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        System.out.println("hitss");
        int selectedRow = tblRestInfo.getSelectedRow();
        System.out.println(selectedRow);
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String restaurant = (String) tblRestInfo.getValueAt(selectedRow, 0);
            Restaurant r = ecosystem.getRestaurantDirectory().findRestaurant(restaurant);
            MenuPanel manageMenuPanel = new MenuPanel(userProcessContainer, userAccount, ecosystem, r);
            userProcessContainer.add("MenuPanel", manageMenuPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }


    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        populatePreviousTable();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JTable tblPrevious;
    private javax.swing.JTable tblRestInfo;
    // End of variables declaration//GEN-END:variables
}
